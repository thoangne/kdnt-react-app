"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactStyleClasses = _interopRequireDefault(require("react-style-classes"));
var _DropdownModule = _interopRequireDefault(require("./Dropdown.module.scss"));
var _Item = _interopRequireDefault(require("./Item"));
var _Submenu = _interopRequireDefault(require("./Submenu"));
var _Divider = _interopRequireDefault(require("./Divider"));
var _excluded = ["title", "children", "isDisabled", "position", "wrapperClassName", "buttonClassName", "menuClassName", "onClick", "isActive", "buttonVariant", "openOnHover"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var Dropdown = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var title = _ref.title,
    children = _ref.children,
    isDisabled = _ref.isDisabled,
    position = _ref.position,
    wrapperClassName = _ref.wrapperClassName,
    buttonClassName = _ref.buttonClassName,
    menuClassName = _ref.menuClassName,
    onClick = _ref.onClick,
    isActive = _ref.isActive,
    buttonVariant = _ref.buttonVariant,
    openOnHover = _ref.openOnHover,
    props = _objectWithoutProperties(_ref, _excluded);
  var _useState = (0, _react.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    isOpen = _useState2[0],
    setOpen = _useState2[1];
  var dropdownRef = (0, _react.useRef)();
  var handleClick = (0, _react.useCallback)(function (e) {
    if (!dropdownRef.current.contains(e.target)) {
      setOpen(false);
      document.removeEventListener('mousedown', handleClick);
    }
  }, []);
  (0, _react.useEffect)(function () {
    return function () {
      document.removeEventListener('mousedown', handleClick);
    };
  }, []);
  var handleButtonOnClick = function handleButtonOnClick(e) {
    if (e) {
      e.preventDefault();
      e.stopPropagation();
    }
    if (isDisabled) {
      return;
    }
    onClick(e);
    setOpen(!isOpen);
    if (isOpen) {
      document.removeEventListener('mousedown', handleClick);
    } else {
      document.addEventListener('mousedown', handleClick);
    }
  };
  (0, _react.useImperativeHandle)(ref, function () {
    return {
      dropdownRef: dropdownRef,
      toggle: handleButtonOnClick,
      isOpen: isOpen
    };
  });
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _reactStyleClasses.default)(_DropdownModule.default.dropdown, wrapperClassName),
    ref: dropdownRef
  }, /*#__PURE__*/_react.default.createElement("button", _extends({
    type: "button",
    className: (0, _reactStyleClasses.default)(_DropdownModule.default.button, (isOpen || isActive) && _DropdownModule.default.active, isDisabled && _DropdownModule.default.disabled, buttonVariant && _DropdownModule.default["button-".concat(buttonVariant)], buttonClassName),
    disabled: isDisabled,
    tabIndex: 0,
    onClick: !openOnHover ? handleButtonOnClick : undefined,
    onMouseOver: openOnHover ? handleButtonOnClick : undefined
  }, props), title), isOpen && /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _reactStyleClasses.default)(_DropdownModule.default.menu, _DropdownModule.default["menu-".concat(position)], menuClassName)
  }, /*#__PURE__*/_react.default.createElement("ul", null, children)));
});
Dropdown.displayName = 'Dropdown';
Dropdown.propTypes = {
  title: _propTypes.default.any,
  buttonVariant: _propTypes.default.oneOf(['primary', 'secondary', 'tertiary', 'special', 'special-success', 'dashed']),
  isActive: _propTypes.default.bool,
  children: _propTypes.default.node,
  isDisabled: _propTypes.default.bool,
  position: _propTypes.default.oneOf(['left', 'right', 'top-right', 'top-left']),
  wrapperClassName: _propTypes.default.string,
  buttonClassName: _propTypes.default.string,
  menuClassName: _propTypes.default.string,
  onClick: _propTypes.default.func,
  openOnHover: _propTypes.default.bool
};
Dropdown.defaultProps = {
  children: null,
  isDisabled: false,
  title: null,
  buttonVariant: 'secondary',
  isActive: false,
  position: 'left',
  wrapperClassName: null,
  buttonClassName: null,
  menuClassName: null,
  onClick: function onClick() {
    return null;
  },
  openOnHover: false
};
Dropdown.Item = _Item.default;
Dropdown.Submenu = _Submenu.default;
Dropdown.Divider = _Divider.default;
var _default = Dropdown;
exports.default = _default;